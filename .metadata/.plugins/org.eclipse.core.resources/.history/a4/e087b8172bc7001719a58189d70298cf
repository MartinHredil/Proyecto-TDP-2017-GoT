package niveles;
import juego.Juego;
import mapa.Celda;
import objetos.Arbol;
import objetos.Charco;
import objetos.Objeto;

import java.util.Random;

import enemigos.*;
import herramientas.Coleccion;

public class Nivel1 extends Nivel {

	protected Juego juego;
	protected Coleccion<String> Oleadas;
	
	public Nivel1(Juego j)
	{
		Oleadas = new Coleccion<String>();
		String s = "MOMOMMOODOOMMCMMMHMMMM";
		Oleadas.add(s);
	}
	
	public void run()
	{
		juego.agregarEnemigo(basura);
		Random r1 = new Random();
		int Rnd1 = r1.nextInt(juego.getFilas()-1)+1;
		int Rnd2 = r1.nextInt(juego.getColumnas()-80);
		if(Rnd2<100 && juego.getColumnas()>100)
			Rnd2+=100;
		
		Objeto prueba7 = new Charco(juego.getMapa().getCelda(Rnd1,Rnd2));
		juego.getMapa().getCelda(Rnd1,Rnd2).agregar(prueba7);
		
		Rnd1 = r1.nextInt(juego.getFilas()-1)+1;
		Rnd2 = r1.nextInt(juego.getColumnas()-80);
		if(Rnd2<100 && juego.getColumnas()>100)
			Rnd2+=100;
		
		Objeto prueba8 = new Arbol(juego.getMapa().getCelda(Rnd1,Rnd2));
		juego.getMapa().getCelda(Rnd1,Rnd2).agregar(prueba8);
		
		try {
			for(String s:Oleadas)
			{
				sleep(10000);
				for(int i =0;i<s.length();i++)
				{
					Rnd1 = r1.nextInt(juego.getFilas()-1)+1;
					Celda celda = juego.getMapa().getCelda(Rnd1, juego.getColumnas()-1);
					Enemigo nuevo = null;
					char Proximo = s.charAt(i);
					
					boolean pw = false;
					Rnd1 = r1.nextInt(100);
					if(Rnd1%5==0)
						pw = true;
					
					switch (Proximo) {
	                case 'M':  nuevo = new Muerto(celda,pw);
	                         break;
	                case 'O':  nuevo = new Oso(celda,pw);
	                         break;
	                case 'D':  nuevo = new DragonMuerto(celda,pw);
	                         break;
	                case 'C':  nuevo = new Caminante(celda,pw);
	                		 break;
	                case 'H':  nuevo = new CaminanteCaballo(celda,pw);
	       		 			 break;
	            	}
					
					celda.agregar(nuevo);
					juego.agregarEnemigo(nuevo);
					sleep(2000);
				}
				
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		juego.quitarEnemigo(basura);
	}
}
